package com.mycompany.productcustomer;

import javax.swing.table.DefaultTableModel;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;

import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author DELL
 */
public class GenerateBill extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(GenerateBill.class.getName());

    /**
     * Creates new form GenerateBill
     */
    public GenerateBill() {
    initComponents();

    // Set column headers
    DefaultTableModel model = new DefaultTableModel();
    model.setColumnIdentifiers(new Object[]{"Product", "Quantity", "Unit Price", "Total"});
    tblBillItems.setModel(model);

    // Prevent user from editing transaction ID
   // txtTransactionID.setEditable(false); // ðŸ”’ Disable editing

    // Initialize total fields
    calculateTotals();

    // Set up export PDF action
    btnExportPDF.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnExportPDFActionPerformed(evt);
        }
    });

    // Add payment methods
    cmbPaymentMethod.add("Cash");
    cmbPaymentMethod.add("UPI");
    cmbPaymentMethod.add("Credit Card");
    cmbPaymentMethod.add("Debit Card");
    cmbPaymentMethod.add("Net Banking");
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtBuyerName = new javax.swing.JTextField();
        txtBuyerAddress = new javax.swing.JTextField();
        txtBuyerContact = new javax.swing.JTextField();
        txtBuyerEmail = new javax.swing.JTextField();
        lblProductId = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBillItems = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        lblSubtotal = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        lblFinalTotal = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtPurchaseDate = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cmbPaymentMethod = new java.awt.Choice();
        btnPrint = new javax.swing.JButton();
        btnExportPDF = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        txtProductId = new javax.swing.JTextField();
        lblQuantity = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        btnAddToBill = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 153));
        jLabel1.setText("BILLING PAGE");

        jLabel2.setText("Buyer Name :");

        jLabel3.setText("Address       :");

        jLabel4.setText("Phone   :");

        jLabel5.setText("Email     :");

        lblProductId.setText("Product ID :");

        tblBillItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product", "Quantity", "Unit Prize", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblBillItems);

        jLabel7.setText("Sub Total        :");

        jLabel8.setText("Final Total   :");

        jLabel10.setText("Date           :");

        jLabel11.setText("Payment Mode:");

        cmbPaymentMethod.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btnPrint.setText("Print Bill");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        btnExportPDF.setText("Save to DataBase");
        btnExportPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportPDFActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        txtProductId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductIdActionPerformed(evt);
            }
        });

        lblQuantity.setText("Quantity :");

        btnAddToBill.setText("ADD");
        btnAddToBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToBillActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(245, 245, 245)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtBuyerAddress))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtBuyerName, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(32, 32, 32)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtBuyerEmail))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtBuyerContact, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblProductId)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtProductId, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(50, 50, 50)
                                        .addComponent(lblQuantity)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38)
                                        .addComponent(btnAddToBill)
                                        .addGap(33, 33, 33))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel11))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblSubtotal, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                                    .addComponent(cmbPaymentMethod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(83, 83, 83)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblFinalTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtPurchaseDate))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addComponent(btnPrint)
                                .addGap(75, 75, 75)
                                .addComponent(btnExportPDF)
                                .addGap(63, 63, 63)
                                .addComponent(btnReset)))
                        .addGap(0, 77, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(txtBuyerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBuyerContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(txtBuyerAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBuyerEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblProductId)
                            .addComponent(txtProductId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblQuantity)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAddToBill))
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(lblSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(lblFinalTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtPurchaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(cmbPaymentMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrint)
                    .addComponent(btnExportPDF)
                    .addComponent(btnReset))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed

    txtBuyerName.setText("");
    txtBuyerContact.setText("");
    txtBuyerAddress.setText("");
    txtBuyerEmail.setText("");

    // Clear table rows
    DefaultTableModel model = (DefaultTableModel) tblBillItems.getModel();
    model.setRowCount(0);

    // Clear totals and other fields
    lblSubtotal.setText("");
    lblFinalTotal.setText("");
   // txtTransactionID.setText("");
    txtPurchaseDate.setText("");

    // Reset payment method
    cmbPaymentMethod.select(0); // reset to first option
        // TODO add your handling code here:
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed

    try {
        boolean complete = tblBillItems.print();
        if (complete) {
            javax.swing.JOptionPane.showMessageDialog(this, "Bill printed successfully.");
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Printing was cancelled.");
        }
    } catch (Exception e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Print error: " + e.getMessage());
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPrintActionPerformed

    private void btnExportPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportPDFActionPerformed

    try {
        // Load DB driver and connect
        Class.forName("com.mysql.cj.jdbc.Driver");
        java.sql.Connection con = java.sql.DriverManager.getConnection(
            "jdbc:mysql://localhost:3306/testdb", "root", ""); // update if password set

        // 1. Insert into buyers table
        String buyerQuery = "INSERT INTO buyers(name, address, contact_number, email) VALUES (?, ?, ?, ?)";
        java.sql.PreparedStatement buyerStmt = con.prepareStatement(buyerQuery, java.sql.Statement.RETURN_GENERATED_KEYS);
        buyerStmt.setString(1, txtBuyerName.getText());
        buyerStmt.setString(2, txtBuyerAddress.getText());
        buyerStmt.setString(3, txtBuyerContact.getText());
        buyerStmt.setString(4, txtBuyerEmail.getText());
        buyerStmt.executeUpdate();

        java.sql.ResultSet buyerRs = buyerStmt.getGeneratedKeys();
        int buyerId = 0;
        if (buyerRs.next()) {
            buyerId = buyerRs.getInt(1);
           // Object transactionId = null;
           // txtTransactionID.setText(String.valueOf(transactionId)); // ðŸ†” Show the ID on UI

        }
        

        // 2. Insert into transactions table
        String transQuery = "INSERT INTO transactions(buyer_id, transaction_date, payment_method) VALUES (?, ?, ?)";
        java.sql.PreparedStatement transStmt = con.prepareStatement(transQuery, java.sql.Statement.RETURN_GENERATED_KEYS);
        transStmt.setInt(1, buyerId);
        transStmt.setString(2, txtPurchaseDate.getText()); // Make sure date format is correct!
        transStmt.setString(3, cmbPaymentMethod.getSelectedItem());
        
        transStmt.setInt(1, buyerId);

// âœ… Date format fix here
String inputDate = txtPurchaseDate.getText();
SimpleDateFormat inputFormat = new SimpleDateFormat("dd/MM/yyyy");
SimpleDateFormat dbFormat = new SimpleDateFormat("yyyy-MM-dd");
String formattedDate = "";
try {
    java.util.Date parsedDate = inputFormat.parse(inputDate);
    formattedDate = dbFormat.format(parsedDate);
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, "Invalid Date Format. Use dd/MM/yyyy.");
    return;
}
transStmt.setString(2, formattedDate);

transStmt.setString(3, cmbPaymentMethod.getSelectedItem().toString());

        
        
        transStmt.executeUpdate();

        java.sql.ResultSet transRs = transStmt.getGeneratedKeys();
        int transactionId = 0;
        if (transRs.next()) {
            transactionId = transRs.getInt(1);
        }

        // 3. Insert into transaction_items
        String itemQuery = "INSERT INTO transaction_items(transaction_id, product_id, quantity, unit_price, total_price) VALUES (?, ?, ?, ?, ?)";
        java.sql.PreparedStatement itemStmt = con.prepareStatement(itemQuery);

        for (int i = 0; i < tblBillItems.getRowCount(); i++) {
            String productName = tblBillItems.getValueAt(i, 0).toString();
            int quantity = Integer.parseInt(tblBillItems.getValueAt(i, 1).toString());
            double unitPrice = Double.parseDouble(tblBillItems.getValueAt(i, 2).toString());
            double totalPrice = Double.parseDouble(tblBillItems.getValueAt(i, 3).toString());

            // Fetch product ID based on name
            String productIdQuery = "SELECT id FROM products WHERE name = ?";
            java.sql.PreparedStatement pidStmt = con.prepareStatement(productIdQuery);
            pidStmt.setString(1, productName);
            java.sql.ResultSet pidRs = pidStmt.executeQuery();
            int productId = 0;
            if (pidRs.next()) {
                productId = pidRs.getInt("id");
            }

            itemStmt.setInt(1, transactionId);
            itemStmt.setInt(2, productId);
            itemStmt.setInt(3, quantity);
            itemStmt.setDouble(4, unitPrice);
            itemStmt.setDouble(5, totalPrice);
            itemStmt.executeUpdate();
        }

        JOptionPane.showMessageDialog(this, "Bill saved to database successfully!");
        JOptionPane.showMessageDialog(this, "Bill saved successfully!\nTransaction ID: " + transactionId);


        con.close();
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error saving to DB: " + e.getMessage());
    }
    
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExportPDFActionPerformed

    private void btnAddToBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToBillActionPerformed
    String productIdStr = txtProductId.getText();
    String quantityStr = txtQuantity.getText();

    if (productIdStr.isEmpty() || quantityStr.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter both Product ID and Quantity.");
        return;
    }

    try {
        int productId = Integer.parseInt(productIdStr);
        int quantity = Integer.parseInt(quantityStr);

        // Connect to DB
        Class.forName("com.mysql.cj.jdbc.Driver");
        java.sql.Connection con = java.sql.DriverManager.getConnection(
            "jdbc:mysql://localhost:3306/testdb", "root", "");

        // Fetch product info
        String query = "SELECT name, price FROM products WHERE id = ?";
        java.sql.PreparedStatement stmt = con.prepareStatement(query);
        stmt.setInt(1, productId);
        java.sql.ResultSet rs = stmt.executeQuery();

        if (rs.next()) {
            String productName = rs.getString("name");
            double unitPrice = rs.getDouble("price");
            double total = unitPrice * quantity;

            // Add to table
            DefaultTableModel model = (DefaultTableModel) tblBillItems.getModel();
            model.addRow(new Object[]{productName, quantity, unitPrice, total});

            calculateTotals();

            // Clear inputs
            txtProductId.setText("");
            txtQuantity.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Product ID not found.");
        }

        con.close();
        String transactionId = null;
        String pdfFilename = "bill_" + transactionId + ".pdf";
Document document = new Document();
PdfWriter.getInstance(document, new FileOutputStream(pdfFilename));
document.open();

Font titleFont = new Font(Font.FontFamily.HELVETICA, 16, Font.BOLD, BaseColor.MAGENTA);
Paragraph title = new Paragraph("Customer Billing Report", titleFont);
title.setAlignment(Element.ALIGN_CENTER);
document.add(title);

document.add(new Paragraph(" "));
document.add(new Paragraph("Buyer Name: " + txtBuyerName.getText()));
document.add(new Paragraph("Contact No.: " + txtBuyerContact.getText()));
document.add(new Paragraph("Email: " + txtBuyerEmail.getText()));
document.add(new Paragraph("Address: " + txtBuyerAddress.getText()));
document.add(new Paragraph("Payment Mode: " + cmbPaymentMethod.getSelectedItem()));
document.add(new Paragraph("Date: " + txtPurchaseDate.getText()));
document.add(new Paragraph(" "));

// Create Table for Items
PdfPTable table = new PdfPTable(4); // Product, Qty, Unit Price, Total
table.setWidthPercentage(100);
table.addCell("Product");
table.addCell("Quantity");
table.addCell("Unit Price");
table.addCell("Total");

DefaultTableModel model = (DefaultTableModel) tblBillItems.getModel();
for (int i = 0; i < model.getRowCount(); i++) {
    table.addCell(model.getValueAt(i, 0).toString());
    table.addCell(model.getValueAt(i, 1).toString());
    table.addCell(model.getValueAt(i, 2).toString());
    table.addCell(model.getValueAt(i, 3).toString());
}
document.add(table);

document.add(new Paragraph(" "));
document.add(new Paragraph("Sub Total: " + lblSubtotal.getText()));
document.add(new Paragraph("Final Total: " + lblFinalTotal.getText()));

document.close();

JOptionPane.showMessageDialog(this, "PDF saved: " + pdfFilename);

    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddToBillActionPerformed

    private void txtProductIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductIdActionPerformed
private void calculateTotals() {
    double subtotal = 0.0;

    for (int i = 0; i < tblBillItems.getRowCount(); i++) {
        Object totalVal = tblBillItems.getValueAt(i, 3); // 4th column is 'Total'
        if (totalVal != null) {
            subtotal += Double.parseDouble(totalVal.toString());
        }
    }

    lblSubtotal.setText(String.format("%.2f", subtotal));
    lblFinalTotal.setText(String.format("%.2f", subtotal)); // No tax or discount
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new GenerateBill().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToBill;
    private javax.swing.JButton btnExportPDF;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnReset;
    private java.awt.Choice cmbPaymentMethod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField lblFinalTotal;
    private javax.swing.JLabel lblProductId;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JTextField lblSubtotal;
    private javax.swing.JTable tblBillItems;
    private javax.swing.JTextField txtBuyerAddress;
    private javax.swing.JTextField txtBuyerContact;
    private javax.swing.JTextField txtBuyerEmail;
    private javax.swing.JTextField txtBuyerName;
    private javax.swing.JTextField txtProductId;
    private javax.swing.JTextField txtPurchaseDate;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
